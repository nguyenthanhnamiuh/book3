/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.lang.reflect.Array;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Locale;
import java.util.Set;

import javax.print.attribute.AttributeSet;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableRowSorter;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

import bus.ChiTietKhuyenMai_BUS;
import bus.KhuyenMai_BUS;
import bus.SanPham_BUS;
import entities.ChiTietKhuyenMai;
import entities.HoaDon;
import entities.KhuyenMai;
import entities.NhaCungCap;
import entities.SanPham;
import entities.ThuongHieu;
import utilities.ButtonRender;
import utilities.ErrorMessage;
import utilities.ImageProcessing;
import utilities.Numberic;

/**
 *
 * @author NguyenThanhLuan
 */
public class TAB_KhuyenMai extends javax.swing.JPanel {
	private DefaultTableModel tableModel;
	private DefaultTableModel tableModelSP;
	private KhuyenMai_BUS khuyenMai_BUS;
	private ArrayList<KhuyenMai> danhSachKM;
	private SanPham_BUS sanPham_BUS;
	private ArrayList<SanPham> danhSachSp;
	private ChiTietKhuyenMai_BUS chiTietKhuyenMai_BUS;
	private ArrayList<ChiTietKhuyenMai> danhSachCTTKM;
	private Calendar currentDate = Calendar.getInstance();
	private TableRowSorter<DefaultTableModel> sorter;
	private TableRowSorter<DefaultTableModel> sorterCTTKM;
	SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
	private boolean evt_selectVoucher = false;
	private boolean evt_selectSave = false;
	private boolean evet_Update = false;
	private DefaultTableModel tableModelDSCTTKM;
	private DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
	private String nameVoucher = "";
    /**
     * Creates new form TAB_KhuyenMai
     */
    public TAB_KhuyenMai() {
        initComponents();
        khuyenMai_BUS = new KhuyenMai_BUS();
        sanPham_BUS = new SanPham_BUS();
        chiTietKhuyenMai_BUS = new ChiTietKhuyenMai_BUS();
        loadDataKM();
        loadDataSP();
    	loadDuLieuThuongHieu();
        currentDate = Calendar.getInstance();
        tableKM.getColumnModel().getColumn(10).setCellRenderer(new utilities.DetaiCellBtn());
        tableKM.setRowHeight(22);
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        txt_CTTKM_KiemTraVoucher.setVisible(false);
        btn_CTTKM_KiemTraVoucher.setVisible(false);
        loadDataCTTKM();
        spSoLuongApDung.setValue(1);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tabbedPane = new javax.swing.JTabbedPane();
        pnlALL = new javax.swing.JPanel();
        center = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        NhapMa = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        lblMaKhuyenMai = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        radVoucher = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        tenKhuyenMai = new javax.swing.JLabel();
        txtTenKM = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        lblSoLuong = new javax.swing.JLabel();
        spSoLuongApDung = new javax.swing.JSpinner(new SpinnerNumberModel(0, 0, null, 1));
        jPanel18 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtDonHangTu = new javax.swing.JTextField();
        hinhThuc = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtHinhThuc = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtNgayBatDau = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtMucGiamGia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNgayKetThuc = new com.toedter.calendar.JDateChooser();
        btnKhuyenMaiTao = new javax.swing.JPanel();
        btnLuu = new javax.swing.JButton();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnHuy = new javax.swing.JButton();
        pnl_SP = new javax.swing.JPanel();
        pnl_InSp = new javax.swing.JPanel();
        titleSelectKhuyenMai = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        lblApDung = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        comboboxApDung = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        checkBoxSelectChoTatCa = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        TimMaSanPham = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        tableSelectKhuyenMai = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableChonSP = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        txtTimKMTheoMa = new javax.swing.JTextField();
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(4, 0), new java.awt.Dimension(4, 0), new java.awt.Dimension(4, 32767));
        btnTimKiemKhuyenMai = new javax.swing.JButton();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(30, 0), new java.awt.Dimension(30, 0), new java.awt.Dimension(30, 32767));
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKM = new javax.swing.JTable();
        tableDSKM = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_CTTKM_NgayBatDau = new com.toedter.calendar.JDateChooser();
        txt_CTTKM_NgayKetThuc = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_CTTKM_GiaTriTu = new javax.swing.JTextField();
        txt_CTTKM_GiaTriDen = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_CTTKM_MaKhuyenMai = new javax.swing.JTextField();
        txt_CTTKM_TenKM = new javax.swing.JTextField();
        btn_CTTKM_TimKiem = new javax.swing.JButton();
        btn_CTTKM_TaiLai = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        btn_CTTKM_CapNhat = new javax.swing.JButton();
        btn_CTTKM_XoaRong = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        txt_CTTKM_KiemTraVoucher = new javax.swing.JTextField();
        btn_CTTKM_KiemTraVoucher = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jLabel3 = new javax.swing.JLabel();
        cbb_CTTKM_SXGiaTri = new javax.swing.JComboBox<>();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jLabel10 = new javax.swing.JLabel();
        cbb_CTTKM_DonGia = new javax.swing.JComboBox<>();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_DSCTTKM = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(1200, 670));
        setLayout(new java.awt.BorderLayout());

        tabbedPane.setPreferredSize(new java.awt.Dimension(1774, 700));

        pnlALL.setMinimumSize(new java.awt.Dimension(1200, 495));
        pnlALL.setPreferredSize(new java.awt.Dimension(1774, 600));
        pnlALL.setLayout(new java.awt.BorderLayout());

        center.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 1, 1, 1));
        center.setMinimumSize(new java.awt.Dimension(962, 460));
        center.setLayout(new javax.swing.BoxLayout(center, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 360));
        jPanel1.setMinimumSize(new java.awt.Dimension(952, 350));
        jPanel1.setPreferredSize(new java.awt.Dimension(1224, 340));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 8, 2, 8));
        jPanel3.setPreferredSize(new java.awt.Dimension(441, 300));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.PAGE_AXIS));

        NhapMa.setPreferredSize(new java.awt.Dimension(204, 160));
        NhapMa.setLayout(new java.awt.GridLayout(2, 1, 0, 8));

        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.LINE_AXIS));

        lblMaKhuyenMai.setText("Mã khuyến mại:");
        lblMaKhuyenMai.setPreferredSize(new java.awt.Dimension(110, 16));
        jPanel10.add(lblMaKhuyenMai);

        txtMaKM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaKMKeyReleased(evt);
            }
        });
        jPanel10.add(txtMaKM);
        txtMaKM.getAccessibleContext().setAccessibleName("");
        txtMaKM.getAccessibleContext().setAccessibleDescription("");

        jPanel21.setLayout(new javax.swing.BoxLayout(jPanel21, javax.swing.BoxLayout.LINE_AXIS));
        jPanel21.add(filler11);

        radVoucher.setText("Voucher/Mã giảm giá");
        radVoucher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radVoucherMouseClicked(evt);
            }
        });
        jPanel21.add(radVoucher);

        jPanel10.add(jPanel21);

        NhapMa.add(jPanel10);

        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));

        tenKhuyenMai.setText("Tên khuyến mại:");
        tenKhuyenMai.setPreferredSize(new java.awt.Dimension(110, 16));
        jPanel9.add(tenKhuyenMai);

        txtTenKM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenKMKeyReleased(evt);
            }
        });
        jPanel9.add(txtTenKM);

        jPanel5.setMinimumSize(new java.awt.Dimension(100, 34));
        jPanel5.setPreferredSize(new java.awt.Dimension(148, 34));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel5);

        NhapMa.add(jPanel9);

        jPanel3.add(NhapMa);

        jPanel8.setMinimumSize(new java.awt.Dimension(332, 68));
        jPanel8.setPreferredSize(new java.awt.Dimension(358, 68));
        jPanel8.setLayout(new java.awt.GridLayout(1, 2, 10, 0));

        jPanel13.setLayout(new java.awt.GridLayout(2, 1));

        lblSoLuong.setText("Số lượng áp dụng:");
        lblSoLuong.setPreferredSize(new java.awt.Dimension(110, 16));
        jPanel13.add(lblSoLuong);
        jPanel13.add(spSoLuongApDung);

        jPanel8.add(jPanel13);

        jPanel18.setLayout(new java.awt.GridLayout(2, 1));

        jLabel9.setText("Đơn hàng từ: ");
        jPanel18.add(jLabel9);

        txtDonHangTu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDonHangTuKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDonHangTuKeyTyped(evt);
            }
        });
        jPanel18.add(txtDonHangTu);

        jPanel8.add(jPanel18);

        jPanel3.add(jPanel8);

        hinhThuc.setMinimumSize(new java.awt.Dimension(298, 136));
        hinhThuc.setPreferredSize(new java.awt.Dimension(425, 136));
        hinhThuc.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        jPanel15.setLayout(new java.awt.GridLayout(4, 1));

        jLabel5.setText("Hình thức giảm giá");
        jPanel15.add(jLabel5);

        txtHinhThuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PHAN_TRAM", "GIA_TRI" }));
        jPanel15.add(txtHinhThuc);

        jLabel7.setText("Thời gian bắt đầu giảm giá");
        jPanel15.add(jLabel7);
        jPanel15.add(txtNgayBatDau);

        hinhThuc.add(jPanel15);

        jPanel7.setLayout(new java.awt.GridLayout(4, 1));

        jLabel6.setText("Mức giảm giá");
        jPanel7.add(jLabel6);

        txtMucGiamGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMucGiamGiaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMucGiamGiaKeyTyped(evt);
            }
        });
        jPanel7.add(txtMucGiamGia);

        jLabel8.setText("Thời gian kết thúc giảm giá");
        jPanel7.add(jLabel8);
        jPanel7.add(txtNgayKetThuc);

        hinhThuc.add(jPanel7);

        jPanel3.add(hinhThuc);

        btnKhuyenMaiTao.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 1, 6, 1));
        btnKhuyenMaiTao.setPreferredSize(new java.awt.Dimension(0, 62));
        btnKhuyenMaiTao.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnLuu.setBackground(new java.awt.Color(85, 182, 83));
        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 255, 255));
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/km_save.png"))); // NOI18N
        btnLuu.setIconTextGap(25);
        btnLuu.setMaximumSize(new java.awt.Dimension(160, 40));
        btnLuu.setMinimumSize(new java.awt.Dimension(160, 40));
        btnLuu.setPreferredSize(new java.awt.Dimension(160, 40));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        btnKhuyenMaiTao.add(btnLuu);
        btnKhuyenMaiTao.add(filler9);

        btnHuy.setBackground(new java.awt.Color(239, 162, 162));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon-huyKM.png"))); // NOI18N
        btnHuy.setIconTextGap(25);
        btnHuy.setMaximumSize(new java.awt.Dimension(160, 40));
        btnHuy.setMinimumSize(new java.awt.Dimension(160, 40));
        btnHuy.setPreferredSize(new java.awt.Dimension(160, 40));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        btnKhuyenMaiTao.add(btnHuy);

        jPanel3.add(btnKhuyenMaiTao);

        jPanel1.add(jPanel3);

        pnl_SP.setLayout(new java.awt.BorderLayout());

        pnl_InSp.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 1, 1, 1));
        pnl_InSp.setPreferredSize(new java.awt.Dimension(602, 310));
        pnl_InSp.setLayout(new java.awt.BorderLayout());

        titleSelectKhuyenMai.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 8));
        titleSelectKhuyenMai.setPreferredSize(new java.awt.Dimension(602, 72));
        titleSelectKhuyenMai.setLayout(new java.awt.GridLayout(2, 2, 0, 8));

        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.LINE_AXIS));

        lblApDung.setText("Áp dụng theo thương hiệu: ");
        jPanel17.add(lblApDung);
        jPanel17.add(filler3);

        comboboxApDung.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        comboboxApDung.setFocusable(false);
        comboboxApDung.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxApDungItemStateChanged(evt);
            }
        });
        jPanel17.add(comboboxApDung);

        titleSelectKhuyenMai.add(jPanel17);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 359, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        titleSelectKhuyenMai.add(jPanel16);

        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));

        checkBoxSelectChoTatCa.setText("Áp dụng cho tất cả");
        checkBoxSelectChoTatCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkBoxSelectChoTatCaMouseClicked(evt);
            }
        });
        jPanel14.add(checkBoxSelectChoTatCa);

        titleSelectKhuyenMai.add(jPanel14);

        jPanel12.setLayout(new java.awt.BorderLayout(10, 0));
        jPanel12.add(TimMaSanPham, java.awt.BorderLayout.CENTER);

        btnTimKiem.setBackground(new java.awt.Color(15, 145, 239));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon-addKM.png"))); // NOI18N
        btnTimKiem.setPreferredSize(new java.awt.Dimension(80, 23));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel12.add(btnTimKiem, java.awt.BorderLayout.EAST);

        titleSelectKhuyenMai.add(jPanel12);

        pnl_InSp.add(titleSelectKhuyenMai, java.awt.BorderLayout.PAGE_START);

        tableSelectKhuyenMai.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        tableSelectKhuyenMai.setMaximumSize(new java.awt.Dimension(2147483647, 200));
        tableSelectKhuyenMai.setPreferredSize(new java.awt.Dimension(870, 200));
        tableSelectKhuyenMai.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 260));

        tableChonSP.setModel(tableModelSP = new DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Chọn", "Mã sản phẩm", "Tên sản phẩm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableChonSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableChonSPMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableChonSP);

        tableSelectKhuyenMai.add(jScrollPane2, java.awt.BorderLayout.PAGE_START);

        pnl_InSp.add(tableSelectKhuyenMai, java.awt.BorderLayout.CENTER);

        pnl_SP.add(pnl_InSp, java.awt.BorderLayout.CENTER);

        jPanel1.add(pnl_SP);

        center.add(jPanel1);
        jPanel1.getAccessibleContext().setAccessibleName("");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setMaximumSize(new java.awt.Dimension(2147483647, 600));
        jPanel2.setMinimumSize(new java.awt.Dimension(173, 14));
        jPanel2.setPreferredSize(new java.awt.Dimension(1764, 600));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel19.setMinimumSize(new java.awt.Dimension(163, 50));
        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel20.setMinimumSize(new java.awt.Dimension(153, 28));
        jPanel20.setPreferredSize(new java.awt.Dimension(320, 28));
        jPanel20.setLayout(new javax.swing.BoxLayout(jPanel20, javax.swing.BoxLayout.LINE_AXIS));

        txtTimKMTheoMa.setPreferredSize(new java.awt.Dimension(180, 22));
        jPanel20.add(txtTimKMTheoMa);
        jPanel20.add(filler12);

        btnTimKiemKhuyenMai.setBackground(new java.awt.Color(15, 145, 239));
        btnTimKiemKhuyenMai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon-search.png"))); // NOI18N
        btnTimKiemKhuyenMai.setMinimumSize(new java.awt.Dimension(26, 32));
        btnTimKiemKhuyenMai.setPreferredSize(new java.awt.Dimension(85, 32));
        btnTimKiemKhuyenMai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemKhuyenMaiActionPerformed(evt);
            }
        });
        jPanel20.add(btnTimKiemKhuyenMai);
        jPanel20.add(filler8);

        jPanel19.add(jPanel20);

        jPanel2.add(jPanel19, java.awt.BorderLayout.PAGE_START);

        jPanel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        jPanel11.setMaximumSize(new java.awt.Dimension(2147483647, 410));
        jPanel11.setLayout(new java.awt.BorderLayout());

        tableKM.setModel(tableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã khuyến mại", "Tên khuyến mại", "Loại khuyến mại", "Giá trị", "Ngày bắt đầu", "Ngày kết thúc", "Đơn giá từ", "Số lượng", "Đã áp dụng", "Chi tiết"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableKM);

        jPanel11.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel11, java.awt.BorderLayout.CENTER);

        center.add(jPanel2);

        pnlALL.add(center, java.awt.BorderLayout.CENTER);

        tabbedPane.addTab("Khuyến mại", pnlALL);

        tableDSKM.setLayout(new java.awt.BorderLayout());

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));
        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel23.setPreferredSize(new java.awt.Dimension(278, 373));
        java.awt.GridBagLayout jPanel23Layout = new java.awt.GridBagLayout();
        jPanel23Layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0};
        jPanel23Layout.rowHeights = new int[] {0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0};
        jPanel23.setLayout(jPanel23Layout);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Tìm kiếm khuyến mại");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 17;
        jPanel23.add(txt_CTTKM_NgayBatDau, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 17;
        jPanel23.add(txt_CTTKM_NgayKetThuc, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        jPanel23.add(jLabel4, gridBagConstraints);

        jLabel13.setText("Ngày khuyến mại");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(txt_CTTKM_GiaTriTu, gridBagConstraints);

        txt_CTTKM_GiaTriDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CTTKM_GiaTriDenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(txt_CTTKM_GiaTriDen, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        jPanel23.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Giá trị khuyến mãi");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(jLabel15, gridBagConstraints);

        jLabel16.setText("Mã khuyến mại/Voucher");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(jLabel16, gridBagConstraints);

        txt_CTTKM_MaKhuyenMai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CTTKM_MaKhuyenMaiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(txt_CTTKM_MaKhuyenMai, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(txt_CTTKM_TenKM, gridBagConstraints);

        btn_CTTKM_TimKiem.setBackground(new java.awt.Color(15, 145, 239));
        btn_CTTKM_TimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btn_CTTKM_TimKiem.setText("Tìm kiếm");
        btn_CTTKM_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CTTKM_TimKiemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 8;
        jPanel23.add(btn_CTTKM_TimKiem, gridBagConstraints);

        btn_CTTKM_TaiLai.setBackground(new java.awt.Color(15, 145, 239));
        btn_CTTKM_TaiLai.setForeground(new java.awt.Color(255, 255, 255));
        btn_CTTKM_TaiLai.setText("Tải lại");
        btn_CTTKM_TaiLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CTTKM_TaiLaiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 8;
        jPanel23.add(btn_CTTKM_TaiLai, gridBagConstraints);

        jLabel18.setText("Tên khuyến mại/Tên sự kiện");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanel23.add(jLabel18, gridBagConstraints);

        btn_CTTKM_CapNhat.setBackground(new java.awt.Color(85, 182, 83));
        btn_CTTKM_CapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btn_CTTKM_CapNhat.setText("Cập nhật");
        btn_CTTKM_CapNhat.setEnabled(false);
        btn_CTTKM_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CTTKM_CapNhatActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 32;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 54, 0);
        jPanel23.add(btn_CTTKM_CapNhat, gridBagConstraints);

        btn_CTTKM_XoaRong.setBackground(new java.awt.Color(15, 145, 239));
        btn_CTTKM_XoaRong.setForeground(new java.awt.Color(255, 255, 255));
        btn_CTTKM_XoaRong.setText("Xóa rỗng");
        btn_CTTKM_XoaRong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CTTKM_XoaRongActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel23.add(btn_CTTKM_XoaRong, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        jPanel23.add(jLabel11, gridBagConstraints);

        tableDSKM.add(jPanel23, java.awt.BorderLayout.WEST);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel22.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 1, 1, 1));
        jPanel22.setPreferredSize(new java.awt.Dimension(473, 40));
        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        txt_CTTKM_KiemTraVoucher.setText("Kiểm tra voucher");
        txt_CTTKM_KiemTraVoucher.setPreferredSize(new java.awt.Dimension(160, 28));
        jPanel22.add(txt_CTTKM_KiemTraVoucher);

        btn_CTTKM_KiemTraVoucher.setText("Kiểm tra");
        btn_CTTKM_KiemTraVoucher.setPreferredSize(new java.awt.Dimension(80, 28));
        jPanel22.add(btn_CTTKM_KiemTraVoucher);
        jPanel22.add(filler4);

        jLabel3.setText("Sắp xếp theo giá trị:");
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 28));
        jPanel22.add(jLabel3);

        cbb_CTTKM_SXGiaTri.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Tăng dần", "Giảm dần" }));
        cbb_CTTKM_SXGiaTri.setPreferredSize(new java.awt.Dimension(160, 28));
        cbb_CTTKM_SXGiaTri.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_CTTKM_SXGiaTriItemStateChanged(evt);
            }
        });
        jPanel22.add(cbb_CTTKM_SXGiaTri);
        jPanel22.add(filler2);

        jLabel10.setText("Sắp xếp theo đơn giá:");
        jLabel10.setPreferredSize(new java.awt.Dimension(120, 28));
        jPanel22.add(jLabel10);

        cbb_CTTKM_DonGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Tăng dần", "Giảm dần" }));
        cbb_CTTKM_DonGia.setPreferredSize(new java.awt.Dimension(160, 28));
        cbb_CTTKM_DonGia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_CTTKM_DonGiaItemStateChanged(evt);
            }
        });
        jPanel22.add(cbb_CTTKM_DonGia);
        jPanel22.add(filler1);

        jPanel4.add(jPanel22, java.awt.BorderLayout.NORTH);

        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 8, 4, 8));
        jPanel6.setLayout(new java.awt.BorderLayout());

        table_DSCTTKM.setModel(tableModelDSCTTKM = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã khuyến mãi", "Tên khuyến mãi", "Loại khuyến mãi", "Giá trị", "Ngày bắt đầu", "Ngày kết thúc", "Đơn hàng từ", "Số lượng", "Đã áp dụng", "Chi tiết"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_DSCTTKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_DSCTTKMMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table_DSCTTKM);

        jPanel6.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

        tableDSKM.add(jPanel4, java.awt.BorderLayout.CENTER);

        tabbedPane.addTab("Danh sách khuyến mại", tableDSKM);

        add(tabbedPane, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    // -------------------------------------------------------------
    
	public void Huy() {
		txtMaKM.setVisible(true);
		lblMaKhuyenMai.setVisible(true);
		filler11.setVisible(true);
		evt_selectVoucher = false;
		lblSoLuong.setText("Số lượng áp dụng: ");
		tenKhuyenMai.setText("Tên khuyến mãi :");
		comboboxApDung.setEnabled(true);
		lblApDung.setEnabled(true);
		checkBoxSelectChoTatCa.setEnabled(true);
		checkBoxSelectChoTatCa.setSelected(false);
		TimMaSanPham.setEnabled(true);
		btnTimKiem.setEnabled(true);
		tableChonSP.setEnabled(true);
		radVoucher.setEnabled(true);
		radVoucher.setSelected(false);
		evet_Update = false;
		
		txtTenKM.setText("");
		txtHinhThuc.setSelectedIndex(0);
		spSoLuongApDung.setValue(1);
		;
		txtMucGiamGia.setText("");
		txtDonHangTu.setText("");
		txtNgayBatDau.setDate(currentDate.getTime());
		Calendar currentDateToMoth = (Calendar) currentDate.clone();
		currentDateToMoth.add(Calendar.MONTH, 1);
		txtNgayKetThuc.setDate(currentDateToMoth.getTime());
	}
    
    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        Huy();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void tableChonSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableChonSPMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableChonSPMouseClicked
    
	private String VoucherCode() {
		String voucherCode;
		String nameRequired = "Voucher_";
		Set<String> generatedCodes = new HashSet<>();

		for (int i = 0; i < danhSachKM.size(); i++) {
			generatedCodes.add(danhSachKM.get(i).getCodeKhuyenMai());
		}

		voucherCode = utilities.RandomVoucherCode.VoucherCode(nameRequired, generatedCodes);

		return voucherCode;
	}

    // KiemTraDieuKienNhap
    
	private boolean checkValue() {
		String maKM = txtMaKM.getText();
		String tenKM = txtTenKM.getText();
		int soLuongApDung = (int) spSoLuongApDung.getValue();
		String donHangTu = txtDonHangTu.getText().replaceAll(",", "");
		String hinhThuc = txtHinhThuc.getSelectedItem().toString().trim();
		String mucGiam = txtMucGiamGia.getText().replaceAll(",", "");
		
		java.util.Date ngayBatDauUtil = txtNgayBatDau.getDate();
		java.util.Date ngayKetThucUtil = txtNgayKetThuc.getDate();
		java.sql.Date ngayBatDau = new java.sql.Date(ngayBatDauUtil.getTime());
		java.sql.Date ngayKetThuc = new java.sql.Date(ngayKetThucUtil.getTime());
		ArrayList<SanPham> dsChonSP = khuyenMai_BUS.laySanPhamDuocChon(tableChonSP);

		if (!radVoucher.isSelected()) {
			if (!(maKM.length() > 0 && maKM.matches("^([A-Za-z1-9_]){6,}$"))) {
				new utilities.ShowMessageError().showError(this, txtMaKM,
						"Mã khuyến mãi không đúng định dạng (có 6 ký tự trở lên  ví dụ: Abc_123)", "Thông báo");
				return false;
			}
			if (maKM.contains("Voucher_")) {
				new utilities.ShowMessageError().showError(this, txtMaKM,
						"Mã khuyến mãi thuộc về Voucher, vui lòng nhập lại!", "Thông báo");
				return false;
			}
			if (dsChonSP.size() <= 0) {
				new utilities.ShowMessageError().showErrorNoTextFile(this, "Chưa chọn sản phẩm khuyến mãi",
						"Thông báo");
				return false;
			}
		}

		if (!(tenKM.length() > 0 && tenKM.matches("^[a-zA-Z0-9%\\s\\-_À-Ỹà-ỹĂăÂâĐđÊêÔôƠơƯư]+$"))) {
			new utilities.ShowMessageError().showError(this, txtTenKM, "Tên khuyến mãi không đúng định dạng",
					"Thông báo");
			return false;
		}

		if (!(soLuongApDung > 0)) {
			new utilities.ShowMessageError().showErrorNoTextFile(this, "Số lượng > 0", "Thông báo");
			return false;
		}
		

		if (!(donHangTu.length() > 0 && Double.valueOf(donHangTu) > 0)) {
			new utilities.ShowMessageError().showError(this, txtDonHangTu, "Đơn hàng > 0", "Thông báo");
			return false;
		}
		

		if (!(mucGiam.length() > 0 && Double.valueOf(mucGiam) > 0)) {
			new utilities.ShowMessageError().showError(this, txtMucGiamGia, "Mức giảm > 0", "Thông báo");
			return false;
		}
		
		if(hinhThuc.equals("PHAN_TRAM") && !(Double.valueOf(mucGiam) > 0 && Double.valueOf(mucGiam) < 100)) {
			new utilities.ShowMessageError().showError(this, txtMucGiamGia, "Mức giảm lớn hơn 0% và nhỏ hơn 100%", "Thông báo");
			return false;
		}

		if (ngayBatDau.after(ngayKetThuc)) {
			new utilities.ShowMessageError().showErrorNoTextFile(this, "Ngày bắt đầu phải trước ngày kết thúc",
					"Thông báo");
			return false;
		}

		return true;
	}

	private boolean checkTenSuKien(String tenSuKien) {
		for (KhuyenMai km : danhSachKM) {
			if (km.getTenKhuyenMai().equals(tenSuKien))
				return true;
		}

		return false;
	}

	
    // Nhấn Lưu
    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
    	 String maKM = txtMaKM.getText();
         String tenKM = txtTenKM.getText();     
         int soLuongApDung = (int) spSoLuongApDung.getValue();
         String donHangTu = txtDonHangTu.getText().replaceAll(",", "");
         String hinhThuc = txtHinhThuc.getSelectedItem().toString();
         String mucGiam = txtMucGiamGia.getText().replaceAll(",", "");
         java.util.Date ngayBatDauUtil = txtNgayBatDau.getDate();
         java.util.Date ngayKetThucUtil = txtNgayKetThuc.getDate();
         java.util.Date date1,date2 = new java.util.Date();
         date1 = ngayBatDauUtil;
         date2 = ngayKetThucUtil;
         java.sql.Date ngayBatDau = new java.sql.Date(ngayBatDauUtil.getTime());
         java.sql.Date ngayKetThuc = new java.sql.Date(ngayKetThucUtil.getTime());
        try {
            if (checkValue()) {
            	// Add
            	if(!evet_Update) {
            		// Thêm một khuyến mãi // nhiều voucher
                    if (radVoucher.isSelected()) {
                        boolean check = false;
                        ArrayList<KhuyenMai> listVoucher = new ArrayList<>();

                        if (checkTenSuKien(tenKM) && JOptionPane.showConfirmDialog(null, "Sự kiện đã tồn tại, bạn có muốn thêm voucher", "Thông báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        	for (int i = 0; i < soLuongApDung; i++) {
                        		KhuyenMai khuyenMai = new KhuyenMai(VoucherCode(), tenKM, hinhThuc, Double.valueOf(mucGiam), ngayBatDau, ngayKetThuc, Double.valueOf(donHangTu), 1, 0);
                        		if (khuyenMai_BUS.addKhuyenMai(khuyenMai)) {
                        			check = true;
                        			listVoucher.add(khuyenMai);
                        		} else {
                        			check = false;
                        			break;
                        		}
                        	}
                        } else {
                        	int yesAdd = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm Voucher: "+ tenKM, "Thông báo", JOptionPane.YES_NO_OPTION);
                        	if(yesAdd == JOptionPane.YES_OPTION) {
                            	for (int i = 0; i < soLuongApDung; i++) {
                            		KhuyenMai khuyenMai = new KhuyenMai(VoucherCode(), tenKM, hinhThuc, Double.valueOf(mucGiam), ngayBatDau, ngayKetThuc, Double.valueOf(donHangTu), 1, 0);
                            		if (khuyenMai_BUS.addKhuyenMai(khuyenMai)) {
                            			check = true;
                            			listVoucher.add(khuyenMai);
                            		} else {
                            			check = false;
                            			break;
                            		}
                            	}
                        	}
                        }
                        if (check) {
                            Huy();
                            loadDataKM();
                            JOptionPane.showMessageDialog(this, "Thêm voucher/mã khuyễn mãi thành công");
                            Form_DanhSachVoucher danhSachVoucher = new Form_DanhSachVoucher(listVoucher);
            				danhSachVoucher.setLocationRelativeTo(null);
            				danhSachVoucher.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            danhSachVoucher.setVisible(true);
                        }
                    }
                    // Khuyen mai
                    else{
                    	 if (checkTenSuKien(tenKM)) {
                    		 int yes = JOptionPane.showConfirmDialog(this, "Tên khuyến mãi đã tồn tại, bạn có muốn thêm khuyến mãi", "Thông báo", JOptionPane.YES_NO_OPTION);
                    		 if(yes == JOptionPane.YES_OPTION) {
                    			 ArrayList<SanPham> dsChonSP = khuyenMai_BUS.laySanPhamDuocChon(tableChonSP);
                                 KhuyenMai khuyenMai = new KhuyenMai(maKM, tenKM, hinhThuc, Double.valueOf(mucGiam), ngayBatDau, ngayKetThuc, Double.valueOf(donHangTu), soLuongApDung, 0);
                                 try {
                                     if (khuyenMai_BUS.addKhuyenMai(khuyenMai) && chiTietKhuyenMai_BUS.addSDanhSachSPKM(khuyenMai, dsChonSP)) {
                                         JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thành công");
                                         loadDataKM();
                                         txtMaKM.setText("");
                                         Huy();
                                     }
                                     else {
                                     	JOptionPane.showMessageDialog(this, "Mã khuyến mã đã tồn tại!");
                                     }
         						} catch (Exception e) {
         							e.printStackTrace();	
         						}
                    		 }                    		
                    	 }
                    	 else {
                    		 int yesAdd = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm khuyến mãi: "+ maKM, "Thông báo", JOptionPane.YES_NO_OPTION);
                    		 if(yesAdd == JOptionPane.YES_OPTION) {
                    			 ArrayList<SanPham> dsChonSP = khuyenMai_BUS.laySanPhamDuocChon(tableChonSP);
                                 KhuyenMai khuyenMai = new KhuyenMai(maKM, tenKM, hinhThuc, Double.valueOf(mucGiam), ngayBatDau, ngayKetThuc, Double.valueOf(donHangTu), soLuongApDung, 0);
                                 try {
                                     if (khuyenMai_BUS.addKhuyenMai(khuyenMai) && chiTietKhuyenMai_BUS.addSDanhSachSPKM(khuyenMai, dsChonSP)) {
                                         JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thành công");
                                         loadDataKM();
                                         txtMaKM.setText("");
                                         Huy();
                                     }
                                     else {
                                     	JOptionPane.showMessageDialog(this, "Mã khuyến mã đã tồn tại!");
                                     }
         						} catch (Exception e) {
         							e.printStackTrace();	
         						}
                    		 }
                    	 }
                    }
                }
                // Update
            	else {
            		Object[] obj = new Object[10];
            		obj[0] = radVoucher.isSelected() ? "Voucher" : "KhuyenMai";
            		obj[1] = maKM; obj[2] = tenKM; obj[3] = soLuongApDung; obj[4] = donHangTu; 
            		obj[5] = hinhThuc; obj[6] = mucGiam; obj[7] = ngayBatDau; obj[8] = ngayKetThuc;
            		obj[9] = nameVoucher;
            		
            		int count = 0;
            		for(int i = 0; i < tableChonSP.getRowCount(); i++) {
            			if ((boolean) tableChonSP.getValueAt(i, 0) == true)
            				count++;
            		}
            		
            		Object[] objProduct = new Object[count];
            		
            		int addProduct = 0;
            		for(int i = 0; i < tableChonSP.getRowCount(); i++) {
            			if ((boolean) tableChonSP.getValueAt(i, 0) == true) {
            				objProduct[addProduct++] = tableChonSP.getValueAt(i, 1);
            			}
            		}
            		for(int i = 0 ; i < objProduct.length; i++) {
            			System.out.println(objProduct[i]);
            		}
            		
            		if(khuyenMai_BUS.update(obj, objProduct)) {
            			JOptionPane.showMessageDialog(null, "Cập nhật thành công!");
            		}
            		loadDataKM();
            	}
            }
    		loadDataCTTKM();
                tableKM.getColumnModel().getColumn(10).setCellRenderer(new utilities.DetaiCellBtn());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi CSDL khi thêm khuyến mãi");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLuuActionPerformed

	private void checkBoxSelectChoTatCaMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_checkBoxSelectChoTatCaMouseClicked
		int rowCount = tableChonSP.getRowCount();
		boolean isSelected = checkBoxSelectChoTatCa.isSelected();
		for (int i = 0; i < rowCount; i++) {
			tableChonSP.setValueAt(isSelected, i, 0);
		}
	}                                                   

	private void btnTimKiemKhuyenMaiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimKiemKhuyenMaiActionPerformed
		String timMa = txtTimKMTheoMa.getText();
		if (!timMa.equals("")) {
			tableKM.removeAll();
			tableKM.setRowSelectionAllowed(false);
			tableModel.setRowCount(0);
			ArrayList<KhuyenMai> khuyenMais = khuyenMai_BUS.getKhuyenMaiByIDAndName(timMa, timMa);
			int stt = 1;
			for (KhuyenMai km : khuyenMais) {
				tableModel.addRow(new Object[] { stt++, km.getCodeKhuyenMai(), km.getTenKhuyenMai(),
						km.getLoaiKhuyenMai(), km.getGiaTri(), km.getNgayKhuyenMai(), km.getNgayHetHanKM(),
						km.getDonHangTu(), km.getSoLuongKhuyenMai(), km.getSoLuotDaApDung() });
			}
			for (int i = 0; i < tableKM.getColumnCount(); i++) {
				tableKM.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
			}
		} else {
			loadDataKM();
		}
		tableKM.getColumnModel().getColumn(10).setCellRenderer(new utilities.DetaiCellBtn());
		tableKM.setRowHeight(22);
	}// GEN-LAST:event_btnTimKiemKhuyenMaiActionPerformed

	private boolean kiemTraTimMaSP(String txtTimSp) {
		if (!(txtTimSp.matches("^\\d+$"))) {
			utilities.ShowMessageError.showErrorNoTextFile(this, "Mã không hợp lệ", "Thông báo");
			return false;
		}
		return true;
	}
	
	private boolean checkMaSP(int ma) {
		ArrayList<SanPham> list = sanPham_BUS.laySanPhamChoKM();
		for(SanPham sp : list) {
			if(sp.getSanPhamID() == ma)
				return true;
		}
		return false;
	}
    
	private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimKiemActionPerformed
		String txtTimSp = TimMaSanPham.getText();
        if (txtTimSp.isEmpty() || txtTimSp.isBlank()) {
            ErrorMessage.showMessageWithFocusTextField("Thông tin",
                    "Để thêm sản phẩm vào hoá đơn, hãy thêm mã sản phẩm trước", TimMaSanPham);
            return;
        }

        if (txtTimSp.matches("\\D")) {
            ErrorMessage.showMessageWithFocusTextField("Thông tin", "Barcode/Mã sản phẩm nội bộ không hợp lệ!",
            		TimMaSanPham);
            return;
        }
		SanPham spTuBarCode = sanPham_BUS.getChiMotSanPhamTheoMaHoacBarcode(txtTimSp);
		if (spTuBarCode == null) {
			System.err.println("Không tồn tại sản phẩm nào!");
			return;
		}
		
		boolean ifIsset = false;
		ArrayList<SanPham> list = sanPham_BUS.laySanPhamChoKM();
		for (int i = 0; i < tableModelSP.getRowCount(); i++) {
			int j = 1;			
			if(spTuBarCode.getSanPhamID() == (int) tableModelSP.getValueAt(i, j)) {
					tableModelSP.setValueAt(true, i, 0);
					ifIsset = true;
					break;
			}
		}
		if (!ifIsset) 				tableModelSP.addRow(new Object[] {true, spTuBarCode.getSanPhamID(), spTuBarCode.getTenSanPham()});

	}// GEN-LAST:event_btnTimKiemActionPerformed

	private void loadDuLieuThuongHieu() {
		ArrayList<ThuongHieu> list = new ArrayList<ThuongHieu>();
		list = sanPham_BUS.getThuongHieu();
		for (ThuongHieu thuongHieu : list) {
			comboboxApDung.addItem(thuongHieu.getThuongHieuID() + ": " + thuongHieu.getTenThuongHieu());
		}
	}
    
	private void comboboxApDungItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_comboboxApDungItemStateChanged
		String maTen = (String) comboboxApDung.getSelectedItem();
		tableChonSP.removeAll();
		tableChonSP.setRowSelectionAllowed(false);
		tableModelSP.setRowCount(0);
		if (maTen.equals("Tất cả")) {
			danhSachSp = new ArrayList<>();
			danhSachSp = sanPham_BUS.laySanPhamChoKM();
			int stt = 1;
			for (int i = 0; i < danhSachSp.size(); i++) {
				tableModelSP.addRow(
						new Object[] { false, danhSachSp.get(i).getSanPhamID(), danhSachSp.get(i).getTenSanPham() });
			}
		} else {
			String[] parts = maTen.split(": ");
			String ma = parts[0];
			danhSachSp = new ArrayList<>();
			danhSachSp = sanPham_BUS.getSPTheoThuongHieu(ma);
			int stt = 1;
			for (int i = 0; i < danhSachSp.size(); i++) {
				tableModelSP.addRow(
						new Object[] { false, danhSachSp.get(i).getSanPhamID(), danhSachSp.get(i).getTenSanPham() });
			}
		}
	}// GEN-LAST:event_comboboxApDungItemStateChanged
    
	private void kichHoatVoucher() {
		if (evet_Update == false) {
			if (radVoucher.isSelected()) {
				int check = JOptionPane.showConfirmDialog(this, "Bạn có muốn tạo Voucher/Mã giảm giá", "Thông báo",
						JOptionPane.YES_NO_OPTION);
				if (check == JOptionPane.YES_OPTION) {
					txtMaKM.setVisible(false);
					lblMaKhuyenMai.setVisible(false);
					filler11.setVisible(false);
					evt_selectVoucher = true;
					lblSoLuong.setText("Số lượng Voucher: ");
					tenKhuyenMai.setText("Tên sự kiện: ");
					comboboxApDung.setEnabled(false);
					lblApDung.setEnabled(false);
					checkBoxSelectChoTatCa.setEnabled(false);
					checkBoxSelectChoTatCa.setSelected(true);
					TimMaSanPham.setEnabled(false);
					btnTimKiem.setEnabled(false);
					tableChonSP.setEnabled(false);
					for (int i = 0; i < tableChonSP.getRowCount(); i++) {
						tableChonSP.setValueAt(false, i, 0);
					}
				} else {
					radVoucher.setSelected(false);
				}
			} else {
				txtMaKM.setVisible(true);
				lblMaKhuyenMai.setVisible(true);
				filler11.setVisible(true);
				evt_selectVoucher = false;
				lblSoLuong.setText("Số lượng áp dụng: ");
				tenKhuyenMai.setText("Tên khuyến mãi :");
				comboboxApDung.setEnabled(true);
				lblApDung.setEnabled(true);
				checkBoxSelectChoTatCa.setEnabled(true);
				checkBoxSelectChoTatCa.setSelected(false);
				TimMaSanPham.setEnabled(true);
				btnTimKiem.setEnabled(true);
				tableChonSP.setEnabled(true);
			}
		}
	}
    
    private void radVoucherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radVoucherMouseClicked
        // TODO add your handling code here:
    	kichHoatVoucher();
    }//GEN-LAST:event_radVoucherMouseClicked

	private void tableKMMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tableKMMouseClicked
		// TODO add your handling code here:
		int selectedRow = tableKM.getSelectedRow();
		int selectedColumn = tableKM.getSelectedColumn();

		if (selectedColumn == tableKM.getColumnCount() - 1) {

			String maKM = (String) tableKM.getValueAt(selectedRow, 1);
			String tenKM = (String) tableKM.getValueAt(selectedRow, 2);

			if (maKM.trim().contains("Voucher_")) {
				Form_XemChiTietVoucher form_XemChiTietVoucher = new Form_XemChiTietVoucher(tenKM);

				form_XemChiTietVoucher.setLocationRelativeTo(null);
				form_XemChiTietVoucher.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				form_XemChiTietVoucher.setVisible(true);
			} else {
				Form_XemChiTietKhuyeMai gui_XemChiTietKhuyeMai = new Form_XemChiTietKhuyeMai(maKM);

				gui_XemChiTietKhuyeMai.setLocationRelativeTo(null);
				gui_XemChiTietKhuyeMai.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				gui_XemChiTietKhuyeMai.setVisible(true);
			}
		}
	}

    private void txt_CTTKM_MaKhuyenMaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CTTKM_MaKhuyenMaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CTTKM_MaKhuyenMaiActionPerformed

    private void txt_CTTKM_GiaTriDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CTTKM_GiaTriDenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CTTKM_GiaTriDenActionPerformed

	private void table_DSCTTKMMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_table_DSCTTKMMouseClicked
		// TODO add your handling code here:
		int selectedRow = table_DSCTTKM.getSelectedRow();
		int selectedColumn = table_DSCTTKM.getSelectedColumn();

		if (selectedColumn == table_DSCTTKM.getColumnCount() - 1) {

			String maKM = (String) table_DSCTTKM.getValueAt(selectedRow, 1);
			String tenKM = (String) table_DSCTTKM.getValueAt(selectedRow, 2);

			if (maKM.trim().contains("Voucher_")) {
				Form_XemChiTietVoucher form_XemChiTietVoucher = new Form_XemChiTietVoucher(tenKM);

				form_XemChiTietVoucher.setLocationRelativeTo(null);
				form_XemChiTietVoucher.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				form_XemChiTietVoucher.setVisible(true);
			} else {
				Form_XemChiTietKhuyeMai gui_XemChiTietKhuyeMai = new Form_XemChiTietKhuyeMai(maKM);

				gui_XemChiTietKhuyeMai.setLocationRelativeTo(null);
				gui_XemChiTietKhuyeMai.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				gui_XemChiTietKhuyeMai.setVisible(true);
			}
		}
		btn_CTTKM_CapNhat.setEnabled(true);
	}

    private void btn_CTTKM_TaiLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CTTKM_TaiLaiActionPerformed
        // TODO add your handling code here:
        loadDataCTTKM();
        cbb_CTTKM_SXGiaTri.setSelectedIndex(0);
        cbb_CTTKM_DonGia.setSelectedIndex(0);
    }//GEN-LAST:event_btn_CTTKM_TaiLaiActionPerformed

	private void btn_CTTKM_XoaRongActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_CTTKM_XoaRongActionPerformed
		txt_CTTKM_NgayBatDau.setDate(null);
		txt_CTTKM_NgayKetThuc.setDate(null);
		txt_CTTKM_GiaTriTu.setText("");
		txt_CTTKM_GiaTriDen.setText("");
		txtMaKM.setText("");
		txtTenKM.setText("");
	}

    private void DataSearch(ArrayList<KhuyenMai> khuyenMais) {
		table_DSCTTKM.removeAll();
		table_DSCTTKM.setRowSelectionAllowed(false);
		tableModelDSCTTKM.setRowCount(0);
		int stt = 1;
		for (KhuyenMai km : khuyenMais) {
			tableModelDSCTTKM.addRow(new Object[] { stt++, km.getCodeKhuyenMai(), km.getTenKhuyenMai(),
					km.getLoaiKhuyenMai(), km.getGiaTri(), km.getNgayKhuyenMai(), km.getNgayHetHanKM(),
					km.getDonHangTu(), km.getSoLuongKhuyenMai(), km.getSoLuotDaApDung() });
		}
		for (int i = 0; i < table_DSCTTKM.getColumnCount(); i++) {
			table_DSCTTKM.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
		}
		table_DSCTTKM.getColumnModel().getColumn(10).setCellRenderer(new utilities.DetaiCellBtn());
		table_DSCTTKM.setRowHeight(22);
		sorterCTTKM = new TableRowSorter<DefaultTableModel>(tableModelDSCTTKM);
		table_DSCTTKM.setRowSorter(sorterCTTKM);
	}
    
	private void btn_CTTKM_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_CTTKM_TimKiemActionPerformed
		java.util.Date dayStartUtil = txt_CTTKM_NgayBatDau.getDate();
		java.util.Date dayEndUtil = txt_CTTKM_NgayKetThuc.getDate();
		java.sql.Date start = null, end = null;

		Object[] obj = new Object[6];

		if (dayStartUtil != null) {
			start = new java.sql.Date(dayStartUtil.getTime());
		}

		if (dayEndUtil != null) {
			end = new java.sql.Date(dayEndUtil.getTime());
		}

		if (dayStartUtil != null && dayEndUtil != null) {
			if (end.getTime() < start.getTime()) {
				ErrorMessage.showConfirmDialogYesNo("Chú ý",
						"Thời gian bắt đầu không hợp lệ. Phải nhỏ hơn hoặc bằng thời gian kết thúc!");
				txt_CTTKM_NgayBatDau.requestFocus();
				return;
			}
		}

		if (!txt_CTTKM_GiaTriTu.getText().isBlank() && !Numberic.isDouble(txt_CTTKM_GiaTriTu.getText())) {
			ErrorMessage.showConfirmDialogYesNo("Chú ý", "Giá trị bắt đầu có ký tự không hợp lệ!");
			txt_CTTKM_GiaTriTu.requestFocus();
			return;
		}

		if (!txt_CTTKM_GiaTriDen.getText().isBlank() && !Numberic.isDouble(txt_CTTKM_GiaTriDen.getText())) {
			ErrorMessage.showConfirmDialogYesNo("Chú ý", "Giá trị kết thúc có ký tự không hợp lệ!");
			txt_CTTKM_GiaTriDen.requestFocus();
			return;
		}

		obj[0] = start;
		obj[1] = end;
		obj[2] = txt_CTTKM_GiaTriTu.getText().isBlank() ? null : Double.valueOf(txt_CTTKM_GiaTriTu.getText());
		obj[3] = txt_CTTKM_GiaTriDen.getText().isBlank() ? null : Double.valueOf(txt_CTTKM_GiaTriDen.getText());
		obj[4] = txt_CTTKM_MaKhuyenMai.getText().isBlank() ? null : txt_CTTKM_MaKhuyenMai.getText();
		obj[5] = txt_CTTKM_TenKM.getText().isBlank() ? null : txt_CTTKM_TenKM.getText();
		
		

		ArrayList<KhuyenMai> arrayList = khuyenMai_BUS.getDanhSachKhuyenMaiNangCao(obj);

		table_DSCTTKM.removeAll();
		table_DSCTTKM.setRowSelectionAllowed(false);
		tableModelDSCTTKM.setRowCount(0);

		int stt = 1;
		for (KhuyenMai km : arrayList) {
			tableModelDSCTTKM.addRow(new Object[] { stt++, km.getCodeKhuyenMai(), km.getTenKhuyenMai(),
					km.getLoaiKhuyenMai(), km.getGiaTri(), km.getNgayKhuyenMai(), km.getNgayHetHanKM(),
					km.getDonHangTu(), km.getSoLuongKhuyenMai(), km.getSoLuotDaApDung() });
		}

	}
	
	private java.util.Date JDateChooser(String day) {
		java.util.Date specificDate = null;
		try {
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		    specificDate = dateFormat.parse(day);
		    return specificDate;
		} catch (Exception e) {
			// TODO: handle exception
		}
		return specificDate;
	}

    private void btn_CTTKM_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CTTKM_CapNhatActionPerformed
        // TODO add your handling code here:
    	tabbedPane.setSelectedComponent(pnlALL);
        
        int selectedRow = table_DSCTTKM.getSelectedRow();
        int selectedColumn = table_DSCTTKM.getSelectedColumn();

        if(selectedRow != -1) {
        	btn_CTTKM_CapNhat.setEnabled(false);
        	evet_Update = true;
        	String maKM = (String) table_DSCTTKM.getValueAt(selectedRow, 1);
            String tenKM = (String) table_DSCTTKM.getValueAt(selectedRow, 2);
            String loaiKM = (String) table_DSCTTKM.getValueAt(selectedRow, 3);
            double giaTri =  (double) table_DSCTTKM.getValueAt(selectedRow, 4);
            java.util.Date ngayBatDau =  (java.util.Date) table_DSCTTKM.getValueAt(selectedRow, 5);
            java.util.Date ngayKetThuc =  (java.util.Date) table_DSCTTKM.getValueAt(selectedRow, 6);
            double donGiaTu =  (double) table_DSCTTKM.getValueAt(selectedRow, 7);
            int soLuong =  khuyenMai_BUS.getSoLuongChuaSD(new Object[] {tenKM , null});
            nameVoucher = tenKM;
            
            if(maKM.contains("Voucher_")) {
            	
            	txtMaKM.setVisible(false);
            	lblMaKhuyenMai.setVisible(false);
            	radVoucher.setEnabled(false);
            	radVoucher.setSelected(true);
            	
            	txtTenKM.setText(tenKM);
            	spSoLuongApDung.setValue(soLuong);
            	txtDonHangTu.setText(String.format("%.0f", donGiaTu));
            	txtHinhThuc.setSelectedItem(loaiKM);
            	txtMucGiamGia.setText(String.format("%.0f", giaTri));
            	txtNgayBatDau.setDate(ngayBatDau);
            	txtNgayKetThuc.setDate(ngayKetThuc);
				comboboxApDung.setEnabled(false);
				lblApDung.setEnabled(false);
				checkBoxSelectChoTatCa.setEnabled(false);
				checkBoxSelectChoTatCa.setSelected(true);
				TimMaSanPham.setEnabled(false);
				btnTimKiem.setEnabled(false);
				tableChonSP.setEnabled(false);
				for (int i = 0; i < tableChonSP.getRowCount(); i++) {
					tableChonSP.setValueAt(false, i, 0);
				}
            }
            else {
            	
            	txtMaKM.setVisible(true);
            	lblMaKhuyenMai.setVisible(true);
            	radVoucher.setEnabled(false);
            	radVoucher.setSelected(false);
            	
            	txtMaKM.setText(maKM);
            	txtMaKM.setEnabled(false);
            	txtTenKM.setText(tenKM);
            	spSoLuongApDung.setValue(soLuong);
            	txtDonHangTu.setText(String.format("%.0f", donGiaTu));
            	txtHinhThuc.setSelectedItem(loaiKM);
            	txtMucGiamGia.setText(String.format("%.0f", giaTri));
            	txtNgayBatDau.setDate(ngayBatDau);
            	txtNgayKetThuc.setDate(ngayKetThuc);
            	
        		tableChonSP.removeAll();
        		
        		tableChonSP.setRowSelectionAllowed(false);
        		tableModelSP.setRowCount(0);
        		tableChonSP.setEnabled(true);
        		
        		int stt = 1;
        		for (int i = 0; i < danhSachSp.size(); i++) {
        			tableModelSP.addRow(
        					new Object[] {checkSelect(danhSachSp.get(i).getSanPhamID(), maKM), danhSachSp.get(i).getSanPhamID(), danhSachSp.get(i).getTenSanPham() });
        		}
            }
        }
    }//GEN-LAST:event_btn_CTTKM_CapNhatActionPerformed

    private void cbb_CTTKM_SXGiaTriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_CTTKM_SXGiaTriItemStateChanged
        // TODO add your handling code here:
        String selectedOption = (String) cbb_CTTKM_SXGiaTri.getSelectedItem();
        switch (selectedOption) {
        case "Tăng dần":
            sorterCTTKM.setSortKeys(Arrays.asList(new RowSorter.SortKey(4, SortOrder.ASCENDING))); // Sắp xếp theo cột "Giá trị" tăng dần
            break;
        case "Giảm dần":
            sorterCTTKM.setSortKeys(Arrays.asList(new RowSorter.SortKey(4, SortOrder.DESCENDING))); // Sắp xếp theo cột "Giá trị" giảm dần
            break;
        case "Tất cả":
            sorterCTTKM.setSortKeys(null); // Bỏ sắp xếp
            break;
        }
    }//GEN-LAST:event_cbb_CTTKM_SXGiaTriItemStateChanged

    private void cbb_CTTKM_DonGiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_CTTKM_DonGiaItemStateChanged
        // TODO add your handling code here:
        String selectedOption = (String) cbb_CTTKM_DonGia.getSelectedItem();
        switch (selectedOption) {
        case "Tăng dần":
            sorterCTTKM.setSortKeys(Arrays.asList(new RowSorter.SortKey(7, SortOrder.ASCENDING))); // Sắp xếp theo cột "Giá trị" tăng dần
            break;
        case "Giảm dần":
            sorterCTTKM.setSortKeys(Arrays.asList(new RowSorter.SortKey(7, SortOrder.DESCENDING))); // Sắp xếp theo cột "Giá trị" giảm dần
            break;
        case "Tất cả":
            sorterCTTKM.setSortKeys(null); // Bỏ sắp xếp
            break;
        }
    }//GEN-LAST:event_cbb_CTTKM_DonGiaItemStateChanged

    private void txtMaKMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaKMKeyReleased
        // TODO add your handling code here:
    	 txtMaKM.setText(txtMaKM.getText().toUpperCase());
    }//GEN-LAST:event_txtMaKMKeyReleased

    private final DecimalFormat decimalFormat = new DecimalFormat("#,###");;
    
	private void txtDonHangTuKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtDonHangTuKeyTyped
		char c = evt.getKeyChar();
		if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
			evt.consume();
		}
	}

    private void txtDonHangTuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDonHangTuKeyReleased
        // TODO add your handling code here:
    	try {
            String text = txtDonHangTu.getText().replaceAll(",", ""); // Xóa dấu , hiện tại (nếu có)
            if (!text.isEmpty()) {
                double value = Double.parseDouble(text);
                txtDonHangTu.setText(decimalFormat.format(value));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtDonHangTuKeyReleased

    private void txtMucGiamGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMucGiamGiaKeyReleased
        // TODO add your handling code here:
    	char c = evt.getKeyChar();
		if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
			evt.consume();
		}
    }//GEN-LAST:event_txtMucGiamGiaKeyReleased

    private void txtMucGiamGiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMucGiamGiaKeyTyped
        // TODO add your handling code here:
    	try {
            String text = txtMucGiamGia.getText().replaceAll(",", ""); // Xóa dấu , hiện tại (nếu có)
            if (!text.isEmpty()) {
            	double value = Double.parseDouble(text);
                txtMucGiamGia.setText(decimalFormat.format(value));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtMucGiamGiaKeyTyped

    private void txtTenKMKeyReleased(java.awt.event.KeyEvent evt) {                                     
        handleKeyReleased();
    }

    private void handleKeyReleased() {
        String text = txtTenKM.getText();

        if (!text.isEmpty()) {
            char firstChar = Character.toUpperCase(text.charAt(0));

            String convertedText = firstChar + text.substring(1);

            txtTenKM.setText(convertedText);
        }
    }

    
    private boolean checkSelect(int maSP,String maKM) {
    	ArrayList<ChiTietKhuyenMai> list = chiTietKhuyenMai_BUS.layCTTKMTheoMa(maKM);
    	for(int i = 0 ; i < list.size(); i++) {
    		if(maSP == list.get(i).getSanPham().getSanPhamID())
    			return true;
    	}
    	return false;
    }
    
    // Load date
    private void loadDataKM() {
		tableKM.removeAll();
		tableKM.setRowSelectionAllowed(false);
		tableModel.setRowCount(0);
		danhSachKM = khuyenMai_BUS.getRecentKhuyenMai(200);
		int stt = 1;
		for (KhuyenMai km : danhSachKM) {
			tableModel.addRow(new Object[] { stt++, km.getCodeKhuyenMai(), km.getTenKhuyenMai(), km.getLoaiKhuyenMai(),
					km.getGiaTri(), km.getNgayKhuyenMai(), km.getNgayHetHanKM(), km.getDonHangTu(),
					km.getSoLuongKhuyenMai(), km.getSoLuotDaApDung() });
		}
		for (int i = 0; i < tableKM.getColumnCount(); i++) {
			tableKM.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
		}
		Calendar currentDate = Calendar.getInstance();
		txtNgayBatDau.setDate(currentDate.getTime());
		currentDate.add(currentDate.MONTH, 1);
		txtNgayKetThuc.setDate(currentDate.getTime());
		sorter = new TableRowSorter<>(tableModel);
		tableKM.setRowSorter(sorter);
    }
    
	private void loadDataSP() {
		tableChonSP.removeAll();
		tableChonSP.setRowSelectionAllowed(false);
		tableModelSP.setRowCount(0);
		danhSachSp = new ArrayList<>();
		danhSachSp = sanPham_BUS.laySanPhamChoKM();
		int stt = 1;
		for (int i = 0; i < danhSachSp.size(); i++) {
			tableModelSP.addRow(
					new Object[] { false, danhSachSp.get(i).getSanPhamID(), danhSachSp.get(i).getTenSanPham() });
		}
	}
	
	public class ValueComparator implements Comparator<Object> {
	    private final NumberFormat numberFormat;

	    public ValueComparator() {
	        this.numberFormat = NumberFormat.getNumberInstance();
	    }

	    @Override
	    public int compare(Object o1, Object o2) {
	        try {
	            Double value1 = numberFormat.parse(o1.toString()).doubleValue();
	            Double value2 = numberFormat.parse(o2.toString()).doubleValue();
	            return Double.compare(value1, value2);
	        } catch (ParseException e) {
	            e.printStackTrace();
	            return 0;
	        }
	    }
	}
	
    
	private void loadDataCTTKM() {
		//"STT", "Mã khuyến mại", "Tên khuyến mại", "Loại khuyến mại", "Giá trị", "Ngày bắt đầu", "Ngày kết thúc", "Đơn hàng từ", "Số lượng", "Đã áp dụng", "Chi tiết"
		table_DSCTTKM.removeAll();
		table_DSCTTKM.setRowSelectionAllowed(false);
		tableModelDSCTTKM.setRowCount(0);
		ArrayList<KhuyenMai> dsList = khuyenMai_BUS.getRecentKhuyenMai(200);
		Locale localeVN = new Locale("vi", "VN");
		NumberFormat vn = NumberFormat.getInstance(localeVN);
		int stt = 1;
		for (KhuyenMai km : dsList) {
			tableModelDSCTTKM.addRow(new Object[] { stt++, km.getCodeKhuyenMai(), km.getTenKhuyenMai(),
					km.getLoaiKhuyenMai(),Double.valueOf(km.getGiaTri()), km.getNgayKhuyenMai(), km.getNgayHetHanKM(),
					km.getDonHangTu(), km.getSoLuongKhuyenMai(), km.getSoLuotDaApDung() });
		}
		for (int i = 0; i < table_DSCTTKM.getColumnCount(); i++) {
			table_DSCTTKM.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
		}
		table_DSCTTKM.getColumnModel().getColumn(10).setCellRenderer(new utilities.DetaiCellBtn());
		table_DSCTTKM.setRowHeight(22);
		sorterCTTKM = new TableRowSorter<DefaultTableModel>(tableModelDSCTTKM);
		table_DSCTTKM.setRowSorter(sorterCTTKM);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel NhapMa;
    private javax.swing.JTextField TimMaSanPham;
    private javax.swing.JButton btnHuy;
    private javax.swing.JPanel btnKhuyenMaiTao;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTimKiemKhuyenMai;
    private javax.swing.JButton btn_CTTKM_CapNhat;
    private javax.swing.JButton btn_CTTKM_KiemTraVoucher;
    private javax.swing.JButton btn_CTTKM_TaiLai;
    private javax.swing.JButton btn_CTTKM_TimKiem;
    private javax.swing.JButton btn_CTTKM_XoaRong;
    private javax.swing.JComboBox<String> cbb_CTTKM_DonGia;
    private javax.swing.JComboBox<String> cbb_CTTKM_SXGiaTri;
    private javax.swing.JPanel center;
    private javax.swing.JCheckBox checkBoxSelectChoTatCa;
    private javax.swing.JComboBox<String> comboboxApDung;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler11;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JPanel hinhThuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblApDung;
    private javax.swing.JLabel lblMaKhuyenMai;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JPanel pnlALL;
    private javax.swing.JPanel pnl_InSp;
    private javax.swing.JPanel pnl_SP;
    private javax.swing.JCheckBox radVoucher;
    private javax.swing.JSpinner spSoLuongApDung;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tableChonSP;
    private javax.swing.JPanel tableDSKM;
    private javax.swing.JTable tableKM;
    private javax.swing.JPanel tableSelectKhuyenMai;
    private javax.swing.JTable table_DSCTTKM;
    private javax.swing.JLabel tenKhuyenMai;
    private javax.swing.JPanel titleSelectKhuyenMai;
    private javax.swing.JTextField txtDonHangTu;
    private javax.swing.JComboBox<String> txtHinhThuc;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtMucGiamGia;
    private com.toedter.calendar.JDateChooser txtNgayBatDau;
    private com.toedter.calendar.JDateChooser txtNgayKetThuc;
    private javax.swing.JTextField txtTenKM;
    private javax.swing.JTextField txtTimKMTheoMa;
    private javax.swing.JTextField txt_CTTKM_GiaTriDen;
    private javax.swing.JTextField txt_CTTKM_GiaTriTu;
    private javax.swing.JTextField txt_CTTKM_KiemTraVoucher;
    private javax.swing.JTextField txt_CTTKM_MaKhuyenMai;
    private com.toedter.calendar.JDateChooser txt_CTTKM_NgayBatDau;
    private com.toedter.calendar.JDateChooser txt_CTTKM_NgayKetThuc;
    private javax.swing.JTextField txt_CTTKM_TenKM;
    // End of variables declaration//GEN-END:variables
}
